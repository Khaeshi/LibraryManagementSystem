package systemPackage;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.*;
import javax.swing.*; // Assuming you're using Swing for the GUI
import javax.swing.table.DefaultTableModel;
  
/**
 *
 * @author user
 */
public class LoanBooks extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
        Connection con;
        PreparedStatement pstmt;
        ResultSet rs;
        
        private static Membership MBForm;
        
    public LoanBooks() {
        initComponents();
        this.setLocationRelativeTo(null);
        setDefaultCloseOperation(LoanBooks.DISPOSE_ON_CLOSE);
        btxt1.requestFocus();
        btnShow.setEnabled(false); // Disables the button
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu1 = new java.awt.PopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        mtxt2 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        mtxt1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        mtxt3 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btxt1 = new javax.swing.JTextField();
        btxt2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnFetch = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnUpload = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnShow = new javax.swing.JButton();
        jLayeredPane = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();

        popupMenu1.setLabel("popupMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(0, 0));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setMinimumSize(new java.awt.Dimension(840, 530));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("LOAN BOOKS");

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)), "Student Detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24), new java.awt.Color(255, 255, 255))); // NOI18N

        mtxt2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mtxt2KeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Last Name");

        mtxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtxt1ActionPerformed(evt);
            }
        });
        mtxt1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mtxt1KeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Student ID");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("First Name");

        mtxt3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mtxt3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mtxt3KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mtxt1)
                    .addComponent(mtxt2)
                    .addComponent(mtxt3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mtxt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mtxt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mtxt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 204), 1, true), "Book Detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24), new java.awt.Color(255, 255, 255))); // NOI18N

        btxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btxt1ActionPerformed(evt);
            }
        });
        btxt1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btxt1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btxt1KeyReleased(evt);
            }
        });

        btxt2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btxt2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btxt2KeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Book ID");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Quantity");

        btnFetch.setText("Fetch");
        btnFetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFetchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnFetch)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(55, 55, 55))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(51, 51, 51)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btxt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(btxt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnFetch)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jButton2.setText("Go Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnUpload.setText("Upload");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logo-laravel-icon-1024.png"))); // NOI18N
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnShow.setText("SHOW TABLE");
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "BOOK ID", "TITLE", "AUTHOR", "QUANTITY AVAILABLE"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        jLayeredPane.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPaneLayout = new javax.swing.GroupLayout(jLayeredPane);
        jLayeredPane.setLayout(jLayeredPaneLayout);
        jLayeredPaneLayout.setHorizontalGroup(
            jLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
        );
        jLayeredPaneLayout.setVerticalGroup(
            jLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(244, 244, 244))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnShow, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(197, 197, 197)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnUpload, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                            .addComponent(btnShow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(102, 102, 102)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Dashboard db = new Dashboard();
        db.setVisible(true);
        
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btxt1ActionPerformed

    private void mtxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtxt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mtxt1ActionPerformed

    private void btxt1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btxt1KeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        btxt2.requestFocusInWindow();
        btnFetch.doClick();       
        }
    }//GEN-LAST:event_btxt1KeyPressed

    private void mtxt1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mtxt1KeyPressed
        // TODO add your handling code here:
           if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        mtxt2.requestFocusInWindow();
        }
    }//GEN-LAST:event_mtxt1KeyPressed

    private void btxt2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btxt2KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            mtxt1.requestFocusInWindow();
        }
    }//GEN-LAST:event_btxt2KeyPressed

    private void mtxt2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mtxt2KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        mtxt3.requestFocusInWindow();
        }
    }//GEN-LAST:event_mtxt2KeyPressed

    private void mtxt3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mtxt3KeyReleased
       
    }//GEN-LAST:event_mtxt3KeyReleased

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        String url = "jdbc:mysql://localhost/mylibrarysystem";
        String user = "root";
        String pwd = "0213";

    try {
        // 1. Establish Connection (if not already established)
        if (con == null || con.isClosed()) {
            con = DriverManager.getConnection(url, user, pwd);
        }

        // 2. Get borrower ID
        int borrowerId = getBorrowerId();
        if (borrowerId == -1) {
            return;
        }
         /*int userId = getCurrentUserId(); // Get the ID of the currently logged-in user
         if (userId == -1) {
         JOptionPane.showMessageDialog(null, "User not logged in.");
         return;
        }*/

        // 3. Get and validate book ID and quantity
        int bookId = getValidBookId();
        if (bookId == -1) {
            return;
        }
        int quantityToBorrow = getValidQuantity(bookId);
        if (quantityToBorrow == -1) {
            return;
        }

        // 4. Check book availability
        int availableQuantity = getAvailableBookQuantity(bookId);
        if (availableQuantity < quantityToBorrow) {
            JOptionPane.showMessageDialog(null, "Not enough books in stock. Only " + availableQuantity + " available.");
            return;
        }

        // 5. Insert into borrowings table (transaction for atomicity)
        try (Connection conn = DriverManager.getConnection(url, user, pwd);
             PreparedStatement pstmt = conn.prepareStatement("INSERT INTO borrowings (stud_ID, book_ID, borrow_date, quantity_borrowed) VALUES (?, ?, ?, ?)")) {//can add user_ID when hashing
            conn.setAutoCommit(false); // Set auto-commit to false ONLY on conn
            pstmt.setInt(1, borrowerId);
            pstmt.setInt(2, bookId);
            pstmt.setDate(3, new java.sql.Date(new java.util.Date().getTime()));
            pstmt.setInt(4, quantityToBorrow);
            pstmt.executeUpdate();

            // 6. Update available_books
            try (PreparedStatement pstmt2 = conn.prepareStatement("UPDATE books SET book_quantity = book_quantity - ? WHERE book_id = ?")) {
                pstmt2.setInt(1, quantityToBorrow);
                pstmt2.setInt(2, bookId);
                pstmt2.executeUpdate();
            }
            conn.commit(); // Commit the transaction
        } catch (SQLException e) {
            // Rollback transaction on error
            if (con != null) {
                try {
                    con.rollback();
                } catch (SQLException ex) {
                    //Log this exception
                }
            }
            JOptionPane.showMessageDialog(null, "Error borrowing book: " + e.getMessage());
            // Remove in production
            return;
        }

        JOptionPane.showMessageDialog(null, "Book borrowed successfully!");

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error borrowing book: " + e.getMessage());
            // Remove in production
    }
    }//GEN-LAST:event_btnUploadActionPerformed

    private void btnFetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFetchActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        String url = "jdbc:mysql://localhost/mylibrarysystem";
        String user = "root";
        String pwd = "0213";

    try {
        // Establish the connection (only if not already established)
        if (con == null || con.isClosed()) {
            con = DriverManager.getConnection(url, user, pwd);
        }

        // Get book ID from text field and validate
        int bookId = getValidBookId();
        if (bookId == -1) return; // Exit if book ID is invalid

        // Prepare the statement with WHERE clause
        String query = "SELECT book_id, title, author, book_quantity FROM books WHERE book_id = ?";
        pstmt = con.prepareStatement(query);
        pstmt.setInt(1, bookId);

        // Execute the query
        rs = pstmt.executeQuery();

        // Clear the existing rows in the table model
        model.setRowCount(0);

        // Process the result set
        if (rs.next()) { //Check if a book was found
            String bookid = rs.getString("book_id");
            String title = rs.getString("title");
            String author = rs.getString("author");
            int quantity = rs.getInt("book_quantity");

            // Add the row to the table model
            model.addRow(new Object[]{bookid, title, author, quantity});
        } else {
            JOptionPane.showMessageDialog(this, "Book not found.");
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
        e.printStackTrace(); //Remove in production
    }
    }//GEN-LAST:event_btnFetchActionPerformed

    private void btxt1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btxt1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btxt1KeyReleased

    private void btxt2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btxt2KeyReleased
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_btxt2KeyReleased

    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnShowActionPerformed

    private void mtxt3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mtxt3KeyPressed
         // TODO add your handling code here: 
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (btxt1.getText().isEmpty()) {
                btxt1.requestFocus();
            } else if(btxt2.getText().isEmpty()){
                btxt2.requestFocus();
            }else if(mtxt1.getText().isEmpty()){
                mtxt1.requestFocus();
            }else if(mtxt2.getText().isEmpty()){
                mtxt2.requestFocus();
            }else if(mtxt3.getText().isEmpty()){
                mtxt3.requestFocus();
            }else {
                btnUpload.doClick();
            }
        }
    }//GEN-LAST:event_mtxt3KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoanBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoanBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoanBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoanBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoanBooks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFetch;
    private javax.swing.JButton btnShow;
    private javax.swing.JButton btnUpload;
    private javax.swing.JTextField btxt1;
    private javax.swing.JTextField btxt2;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField mtxt1;
    private javax.swing.JTextField mtxt2;
    private javax.swing.JTextField mtxt3;
    private java.awt.PopupMenu popupMenu1;
    // End of variables declaration//GEN-END:variables

//Helper function to get and validate book ID (same as before)
private int getValidBookId() {
    try {
        int bookId = Integer.parseInt(btxt1.getText().trim());
        //Here you could add a check to see if the book exists in the database
        //But this is already done in the fetchAndDisplayBookDetails() method
        return bookId;
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Invalid book ID. Please enter a number.");
        return -1;
    }
}

private int getAvailableBookQuantity(int bookId) throws SQLException {
    pstmt = con.prepareStatement("SELECT book_quantity FROM books WHERE book_id = ?");
    pstmt.setInt(1, bookId);
    rs = pstmt.executeQuery();
    if (rs.next()) {
        return rs.getInt("book_quantity");
    } else {
        return 0; // Or throw an exception
    }
}

 // Helper function to get borrower ID from first and last name
    private int getBorrowerId() throws SQLException {
        String firstName = mtxt2.getText().trim();
        String lastName = mtxt3.getText().trim();

        if (firstName.isEmpty() || lastName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter both first and last name.");
            return -1; // Indicate an error
        }

        try (PreparedStatement pstmt = con.prepareStatement("SELECT stud_ID FROM students WHERE fname = ? AND lname = ?")) {
            pstmt.setString(1, firstName);
            pstmt.setString(2, lastName);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    return rs.getInt("stud_ID");
                } else {
                    JOptionPane.showMessageDialog(null, "student not found.");
                    mtxt1.requestFocus(true);
                    return -1; // Indicate an error
                }
            }
        }
    }
    
    // Helper function to get and validate quantity
private int getValidQuantity(int bookId) {
    try {
        int quantity = Integer.parseInt(btxt2.getText().trim());
        if (quantity <= 0) {
            JOptionPane.showMessageDialog(null, "Please enter a valid quantity (greater than 0).");
            return -1;
        }
        return quantity;
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Invalid quantity. Please enter a number.");
        return -1;
    }
}
// You'll need to implement this method to get the current user ID.
private int getCurrentUserId() {
    // Your logic to get the currently logged-in user's ID from your session or authentication mechanism
    // return (int) session.getAttribute("userId");  //Replace with your session mechanism
    return 1; // Placeholder. Replace with your actual logic.
}
}
